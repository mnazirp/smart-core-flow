[
    {
        "id": "68f1d2b77bbdcda6",
        "type": "tab",
        "label": "Apps",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "10a453599cf0bfe0",
        "type": "tab",
        "label": "Forms",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "35d2cc8d792ddb2a",
        "type": "tab",
        "label": "Migrations",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bf22cd3c7ed55a35",
        "type": "tab",
        "label": "R&D",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "77002254b872fa8e",
        "type": "subflow",
        "name": "jwt-sign",
        "info": "## input:\r\non msg.sub assign an object like this:\r\n\r\n\r\n    {        \r\n        nik: '', \r\n        fullName: '',\r\n        email: '',\r\n        occupation: '',\r\n        roles: ['']\r\n    }\r\n\r\n\r\n\r\n## output:\r\ninside msg.sub:\r\n\r\n\r\n\r\n    {\r\n        token: 'eyJhbGciOiJIUzI1NiI...',\r\n        decoded: {}  \r\n    }\r\n\r\n// nrlint function-eslint:off\r\n",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "156f4bd7081013b2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "156f4bd7081013b2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "32e9ed8660fb2fde",
        "type": "subflow",
        "name": "jwt-verify",
        "info": "## input:\non msg.sub assign an a token string like this:\n\n\n    'eyJhbGciOiJIUzI1NiI...'\n\n\n## output:\ninside msg.sub:\n\n\n\n    {\n        token: 'eyJhbGciOiJIUzI1NiI...',\n        decoded: {},\n        error: {\n            message: 'jwt expired',\n            stack: '',\n            arguments: null,\n            name: 'TokenExpiredError',\n            expiredAt: '2023-02-19T07:49:01.000Z'\n        }  \n    }\n\n// nrlint function-eslint:off\n",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "98d349474a76dad2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "98d349474a76dad2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0f802e687dcc9e4a",
        "type": "subflow",
        "name": "hashing",
        "info": "## Input\r\nset msg.sub with the password string that neet to be hashing\r\n\r\n    `MyPassword`\r\n\r\n## Output\r\nit will produce msg.sub a hasing string\r\n\r\n    ``\r\n\r\n    ",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "ae6193f87f0b9e1e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "ae6193f87f0b9e1e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c9c1579a9da27745",
        "type": "subflow",
        "name": "hashing compare",
        "info": "## Input\r\nassign msg.sub with an object:\r\n\r\n    {\r\n        password: 'MyPassword',\r\n        hash: '$2b$10$...'\r\n    }\r\n\r\n## Output\r\nit will produce msg.sub with object:\r\n\r\n    {\r\n        isValid: true //or false\r\n    }\r\n\r\n    ",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "c1d5ea079e920d21"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "c1d5ea079e920d21",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "784d89e62dfb5070",
        "type": "cloudantplus",
        "host": "http://diga:password@localhost:5930",
        "name": "diga-couchdb"
    },
    {
        "id": "9dc2644ec5b51cb2",
        "type": "mysql2-server",
        "host": "${DIGA_MYSQL_HOST}",
        "port": "${DIGA_MYSQL_PORT}",
        "username": "${DIGA_MYSQL_USER}",
        "password": "password",
        "db": "${DIGA_MYSQL_DBNAME}",
        "servername": ""
    },
    {
        "id": "156f4bd7081013b2",
        "type": "function",
        "z": "77002254b872fa8e",
        "name": "jwt sign",
        "func": "let secret = env.get('JWTSECRET');\nlet options = { expiresIn: '2 days' };\nlet token = jwt.sign(msg.sub, secret, options);\nlet decoded = jwt.verify(token, secret);\nmsg.sub = {\n    token: token,\n    decoded: decoded\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "98d349474a76dad2",
        "type": "function",
        "z": "32e9ed8660fb2fde",
        "name": "jwt verify",
        "func": "let secret = env.get('JWTSECRET');\nlet error = null;\nlet decoded = null;\njwt.verify(msg.sub, secret, (err, dec) => {\n    if(err) error = err;\n    decoded = dec;\n});\nmsg.sub = {\n    token: msg.sub,\n    decoded: decoded,\n    error: error\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "jwt",
                "module": "jsonwebtoken"
            }
        ],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ae6193f87f0b9e1e",
        "type": "function",
        "z": "0f802e687dcc9e4a",
        "name": "hashing",
        "func": "let pass = bcrypt.hashSync(msg.sub, 10);\nmsg.sub = pass;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "bcrypt",
                "module": "bcrypt"
            }
        ],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c1d5ea079e920d21",
        "type": "function",
        "z": "c9c1579a9da27745",
        "name": "compare",
        "func": "let {password, hash} = msg.sub;\nlet rs = '';\nrs = bcrypt.compareSync(password, hash);\nmsg.sub = {\n    isValid: rs\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "bcrypt",
                "module": "bcrypt"
            }
        ],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "07090842a5b11d57",
        "type": "cloudantplus in",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "cloudant": "784d89e62dfb5070",
        "database": "smart-configs",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 560,
        "y": 100,
        "wires": [
            [
                "f146b2e3f30c2aa6"
            ]
        ]
    },
    {
        "id": "4b306d7cfa8e7656",
        "type": "change",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smart-apps",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 60,
        "wires": [
            [
                "07090842a5b11d57"
            ]
        ]
    },
    {
        "id": "f146b2e3f30c2aa6",
        "type": "function",
        "z": "68f1d2b77bbdcda6",
        "name": "check apps",
        "func": "let id = msg.req.params.id;\nmsg.found = msg.payload.data.some(x => x.code === id);\nif(msg.found){\n    msg.result = msg.payload.data.find(x => x.code === id);\n    msg.payload = {\n        key: [\"schema\", \"page\"]\n    }\n}else{\n    msg.payload = \"not found\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 140,
        "wires": [
            [
                "db6e97c260d1ad13"
            ]
        ]
    },
    {
        "id": "db6e97c260d1ad13",
        "type": "switch",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "property": "found",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 180,
        "wires": [
            [
                "23aca37ca7c75333"
            ],
            [
                "5c0bb31de63a7815"
            ]
        ]
    },
    {
        "id": "5c0bb31de63a7815",
        "type": "http response",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 800,
        "y": 240,
        "wires": []
    },
    {
        "id": "5ad004fefd0a0e7a",
        "type": "http in",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "url": "/api/apps/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "8645128bc12f8fb7"
            ]
        ]
    },
    {
        "id": "8645128bc12f8fb7",
        "type": "switch",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "property": "req.params.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "4b306d7cfa8e7656"
            ],
            [
                "ab1667e945489ac4"
            ]
        ]
    },
    {
        "id": "a11a2132155a3611",
        "type": "http response",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "ab1667e945489ac4",
        "type": "change",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bad parameters",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 280,
        "wires": [
            [
                "a11a2132155a3611"
            ]
        ]
    },
    {
        "id": "23aca37ca7c75333",
        "type": "cloudantplus in",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "cloudant": "784d89e62dfb5070",
        "database": "smart-blueprint",
        "service": "_ext_",
        "search": "_view_",
        "design": "type",
        "index": "type-topic",
        "x": 820,
        "y": 60,
        "wires": [
            [
                "30e7957e06e98573"
            ]
        ]
    },
    {
        "id": "30e7957e06e98573",
        "type": "function",
        "z": "68f1d2b77bbdcda6",
        "name": "function 1",
        "func": "msg.result['pages'] = msg.payload.map(x => x.value);\nmsg.payload = {\n    key : msg.req.params.id\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 100,
        "wires": [
            [
                "8601b3ec70802672"
            ]
        ]
    },
    {
        "id": "cd0e89b2981e6227",
        "type": "http response",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 980,
        "y": 180,
        "wires": []
    },
    {
        "id": "8601b3ec70802672",
        "type": "cloudantplus in",
        "z": "68f1d2b77bbdcda6",
        "name": "",
        "cloudant": "784d89e62dfb5070",
        "database": "smart-blueprint",
        "service": "_ext_",
        "search": "_view_",
        "design": "navigations",
        "index": "all-navs",
        "x": 820,
        "y": 140,
        "wires": [
            [
                "bec2818cfb56c788"
            ]
        ]
    },
    {
        "id": "bec2818cfb56c788",
        "type": "function",
        "z": "68f1d2b77bbdcda6",
        "name": "function 2",
        "func": "let id = msg.req.params.id;\nmsg.result['navigation'] = msg.payload.find(x => x.value.applicationID === id)?.value;\nmsg.payload = msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 180,
        "wires": [
            [
                "cd0e89b2981e6227"
            ]
        ]
    },
    {
        "id": "cc2ca5ee337e0870",
        "type": "http in",
        "z": "10a453599cf0bfe0",
        "name": "",
        "url": "/api/forms/road-condition",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "640e8c66f45f9c26",
                "740317eedd570707"
            ]
        ]
    },
    {
        "id": "740317eedd570707",
        "type": "http response",
        "z": "10a453599cf0bfe0",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 700,
        "y": 80,
        "wires": []
    },
    {
        "id": "640e8c66f45f9c26",
        "type": "debug",
        "z": "10a453599cf0bfe0",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 120,
        "wires": []
    },
    {
        "id": "24214884693edfa2",
        "type": "function",
        "z": "35d2cc8d792ddb2a",
        "name": "set query",
        "func": "msg.topic = `select * from digaportal.v_getsysroleuser2`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 80,
        "wires": [
            [
                "40248a209f3fdb0c"
            ]
        ]
    },
    {
        "id": "40248a209f3fdb0c",
        "type": "mysql2",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "server": "9dc2644ec5b51cb2",
        "bind": "",
        "topic": "",
        "x": 300,
        "y": 120,
        "wires": [
            [
                "dd4fb4fce5680691"
            ]
        ]
    },
    {
        "id": "f183a287ee95d591",
        "type": "debug",
        "z": "35d2cc8d792ddb2a",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 200,
        "wires": []
    },
    {
        "id": "dd4fb4fce5680691",
        "type": "change",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "users",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smart-system-roles",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 160,
        "wires": [
            [
                "99dafc8417f56638"
            ]
        ]
    },
    {
        "id": "99dafc8417f56638",
        "type": "cloudantplus in",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "cloudant": "784d89e62dfb5070",
        "database": "smart-configs",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 320,
        "y": 200,
        "wires": [
            [
                "4627187758966a77"
            ]
        ]
    },
    {
        "id": "f5aa11d58f518d50",
        "type": "function",
        "z": "35d2cc8d792ddb2a",
        "name": "mapping result",
        "func": "msg.corpRoles = msg.payload.data;\nlet users = msg.users.map(x => {\n    return {\n        nik: x.NIK,\n        fullName: x.szFullName,\n        email: x.szEmailAddress,\n        occupation: msg.corpRoles.find(r => r.origin === x.szCorpRoleName)?.code || null,\n        roles: msg.sysRoles.filter(r => r.origin === x.szSysRoleName).map(r => r.code)\n    }\n});\nmsg.documents = {\n    docs: users\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 160,
        "wires": [
            [
                "8f9ff0f95018dd01"
            ]
        ]
    },
    {
        "id": "4627187758966a77",
        "type": "change",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sysRoles",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "smart-corp-roles",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 80,
        "wires": [
            [
                "4105d7495b07d60f"
            ]
        ]
    },
    {
        "id": "4105d7495b07d60f",
        "type": "cloudantplus in",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "cloudant": "784d89e62dfb5070",
        "database": "smart-configs",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 560,
        "y": 120,
        "wires": [
            [
                "f5aa11d58f518d50"
            ]
        ]
    },
    {
        "id": "36b892547277fd3e",
        "type": "http request",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:5930/smart-users/_bulk_docs",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 200,
        "wires": [
            [
                "f183a287ee95d591"
            ]
        ]
    },
    {
        "id": "8f9ff0f95018dd01",
        "type": "http request",
        "z": "35d2cc8d792ddb2a",
        "name": "delete database",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:5930/smart-users",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 800,
        "y": 80,
        "wires": [
            [
                "292e9cb262adf6cc"
            ]
        ]
    },
    {
        "id": "292e9cb262adf6cc",
        "type": "http request",
        "z": "35d2cc8d792ddb2a",
        "name": "create database",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:5930/smart-users",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 800,
        "y": 120,
        "wires": [
            [
                "b6ef183ef6f342f9"
            ]
        ]
    },
    {
        "id": "b6ef183ef6f342f9",
        "type": "change",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "documents",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 160,
        "wires": [
            [
                "36b892547277fd3e"
            ]
        ]
    },
    {
        "id": "be7488b241be2426",
        "type": "promptinput",
        "z": "35d2cc8d792ddb2a",
        "name": "confirm",
        "datatype": "str",
        "prompt": "this process will overwriten smart-users data, are you sure ? yes / no",
        "property": "payload",
        "propertyType": "msg",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "e76b6489929bdac5"
            ]
        ]
    },
    {
        "id": "e76b6489929bdac5",
        "type": "switch",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 110,
        "y": 120,
        "wires": [
            [
                "24214884693edfa2"
            ]
        ]
    },
    {
        "id": "5b4debb4c819653b",
        "type": "function",
        "z": "35d2cc8d792ddb2a",
        "name": "set query",
        "func": "msg.topic = `\nselect\n\ttab.iOrgID,\n\tvalRef.szValueRef as cCategory,\n\ttab.szOrgName as ChildName,\n\ttab.szDescription as ChildDesc,\n\tparent.iOrgID as ParentID,\n\tparRef.szValueRef as pCategory,\n\tparent.szOrgName as ParentName,\n\tparent.szDescription as ParentDesc\nfrom\n\tdigaportal.oa_organization tab\nleft join digaportal.oa_organization parent on\n\ttab.szParentOrgID = parent.iOrgID\nleft join digaportal.gn_valueref valRef on\n\ttab.iOrgCatID = valRef.iValueRefID\nleft join digaportal.gn_valueref parRef on\n\tparent.iOrgCatID = parRef.iValueRefID\norder by\n\ttab.iOrgID\n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 340,
        "wires": [
            [
                "39b354d40ed8a1be"
            ]
        ]
    },
    {
        "id": "39b354d40ed8a1be",
        "type": "mysql2",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "server": "9dc2644ec5b51cb2",
        "bind": "",
        "topic": "",
        "x": 300,
        "y": 380,
        "wires": [
            [
                "99053d0de0ebc04b"
            ]
        ]
    },
    {
        "id": "c6797d015f1c1a35",
        "type": "debug",
        "z": "35d2cc8d792ddb2a",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 380,
        "wires": []
    },
    {
        "id": "99053d0de0ebc04b",
        "type": "function",
        "z": "35d2cc8d792ddb2a",
        "name": "function 3",
        "func": "let root = msg.payload.filter(x => x.ParentID === null);\nlet rs = [];\nroot.forEach(x => {\n    rs.push({\n        id: x.iOrgID,\n        name: x.ChildName.toUpperCase(),\n        desc: x.ChildDesc,\n        category: x.cCategory.toUpperCase(),\n        children: getHierarchy(msg.payload, x.iOrgID)\n    });\n});\nmsg.payload = rs;\nreturn msg;\n\nfunction getHierarchy(data, parentID, limit = 0) {\n    if (limit > 10) {\n        return;\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n        if (item.ParentID === parentID) {\n            result.push({\n                id: item.iOrgID,\n                name: item.ChildName.toUpperCase(),\n                desc: item.ChildDesc,\n                category: item.cCategory.toUpperCase(),\n                children: (data.some(x => x.ParentID === parentID)) ? getHierarchy(data, item.iOrgID, limit + 1) : null\n            })\n        }\n    }\n    return result;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 420,
        "wires": [
            [
                "c6797d015f1c1a35"
            ]
        ]
    },
    {
        "id": "9a395cb0556025f3",
        "type": "inject",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 340,
        "wires": [
            [
                "5b4debb4c819653b"
            ]
        ]
    },
    {
        "id": "5074b4b5d2488f4c",
        "type": "function",
        "z": "35d2cc8d792ddb2a",
        "name": "set query",
        "func": "msg.topic = `\nselect\n\tszValueRef as label,\n\tszValueRefDescription as description,\n\tszCategory as category,\n\tszCategory2 as category2,\n\tszCategory3 as category3,\n\tszCategory4 as category4,\n\tszCategory5 as category5\nfrom\n\tgn_valueref gv\norder by\n\tszCategory,\n\tszCategory2,\n\tszCategory3,\n\tszCategory4,\n\tszCategory5\n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 500,
        "wires": [
            [
                "53b9204cb4d470b1"
            ]
        ]
    },
    {
        "id": "53b9204cb4d470b1",
        "type": "mysql2",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "server": "9dc2644ec5b51cb2",
        "bind": "",
        "topic": "",
        "x": 300,
        "y": 540,
        "wires": [
            [
                "a78e0a347e852e3d"
            ]
        ]
    },
    {
        "id": "d616f6a00d4a5f6d",
        "type": "debug",
        "z": "35d2cc8d792ddb2a",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 540,
        "wires": []
    },
    {
        "id": "a78e0a347e852e3d",
        "type": "function",
        "z": "35d2cc8d792ddb2a",
        "name": "function 4",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 580,
        "wires": [
            [
                "d616f6a00d4a5f6d"
            ]
        ]
    },
    {
        "id": "5270905cc4ac9962",
        "type": "inject",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "5074b4b5d2488f4c"
            ]
        ]
    },
    {
        "id": "1f0713df38c92163",
        "type": "inject",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "28b44ca8a2233941"
            ]
        ]
    },
    {
        "id": "28b44ca8a2233941",
        "type": "cloudantplus in",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "cloudant": "784d89e62dfb5070",
        "database": "smart-users",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "101b00cc7e45abf6"
            ]
        ]
    },
    {
        "id": "101b00cc7e45abf6",
        "type": "debug",
        "z": "35d2cc8d792ddb2a",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 660,
        "wires": []
    },
    {
        "id": "709c13d3600615a8",
        "type": "function",
        "z": "35d2cc8d792ddb2a",
        "name": "set query",
        "func": "msg.topic = `\nkill 6;\n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 780,
        "wires": [
            [
                "0c254209d5877be2"
            ]
        ]
    },
    {
        "id": "0c254209d5877be2",
        "type": "mysql2",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "server": "9dc2644ec5b51cb2",
        "bind": "",
        "topic": "",
        "x": 300,
        "y": 820,
        "wires": [
            [
                "7e4b341e2bc78eb5"
            ]
        ]
    },
    {
        "id": "7e4b341e2bc78eb5",
        "type": "debug",
        "z": "35d2cc8d792ddb2a",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 820,
        "wires": []
    },
    {
        "id": "f76a86ee0417d6ce",
        "type": "inject",
        "z": "35d2cc8d792ddb2a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 780,
        "wires": [
            [
                "709c13d3600615a8"
            ]
        ]
    },
    {
        "id": "9ae2b5c84660f97f",
        "type": "inject",
        "z": "bf22cd3c7ed55a35",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "e55f4d0f605df90a"
            ]
        ]
    },
    {
        "id": "54ae63fd2179cae5",
        "type": "debug",
        "z": "bf22cd3c7ed55a35",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 100,
        "wires": []
    },
    {
        "id": "e55f4d0f605df90a",
        "type": "function",
        "z": "bf22cd3c7ed55a35",
        "name": "prepare jwt payload",
        "func": "msg.sub = {\n    nik: '09001040',\n    fullName: 'Ahmad Nuroffiq',\n    email: 'staff.rc.pmse@sinarmas-agri.com',\n    occupation: 'RCS',\n    roles: ['SFR']\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 60,
        "wires": [
            [
                "5a727d33d0fe446c"
            ]
        ]
    },
    {
        "id": "5a727d33d0fe446c",
        "type": "subflow:77002254b872fa8e",
        "z": "bf22cd3c7ed55a35",
        "name": "",
        "x": 280,
        "y": 100,
        "wires": [
            [
                "54ae63fd2179cae5"
            ]
        ]
    },
    {
        "id": "a77291f3c5c33cc0",
        "type": "inject",
        "z": "bf22cd3c7ed55a35",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "1755b545d754801e"
            ]
        ]
    },
    {
        "id": "993afa7afcd3c77b",
        "type": "debug",
        "z": "bf22cd3c7ed55a35",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 240,
        "wires": []
    },
    {
        "id": "1755b545d754801e",
        "type": "function",
        "z": "bf22cd3c7ed55a35",
        "name": "prepare jwt payload",
        "func": "// msg.sub = `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWsiOiIwOTAwMTA0MCIsImZ1bGxOYW1lIjoiQWhtYWQgTnVyb2ZmaXEiLCJlbWFpbCI6InN0YWZmLnJjLnBtc2VAc2luYXJtYXMtYWdyaS5jb20iLCJvY2N1cGF0aW9uIjoiUkNTIiwicm9sZXMiOlsiU0ZSIl0sImlhdCI6MTY3NjYyMDE0MSwiZXhwIjoxNjc2NzkyOTQxfQ.LycdE5eTfYbAecB5cJ2JW8EQShn5NPpvDGxvP1qPq_c`;\nmsg.sub = `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWsiOiIwOTAwMTA0MCIsImZ1bGxOYW1lIjoiQWhtYWQgTnVyb2ZmaXEiLCJlbWFpbCI6InN0YWZmLnJjLnBtc2VAc2luYXJtYXMtYWdyaS5jb20iLCJvY2N1cGF0aW9uIjoiUkNTIiwicm9sZXMiOlsiU0ZSIl0sImlhdCI6MTY3Njg2MTYyMywiZXhwIjoxNjc3MDM0NDIzfQ.2qCafDVE3C6NiO5V1Gt_PeKN5LSfc_1j1c-SLlkuWgw`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 200,
        "wires": [
            [
                "a175eeab9871e24a"
            ]
        ]
    },
    {
        "id": "a175eeab9871e24a",
        "type": "subflow:32e9ed8660fb2fde",
        "z": "bf22cd3c7ed55a35",
        "name": "",
        "x": 280,
        "y": 240,
        "wires": [
            [
                "993afa7afcd3c77b"
            ]
        ]
    },
    {
        "id": "3e66c4a31f8d9450",
        "type": "inject",
        "z": "bf22cd3c7ed55a35",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 340,
        "wires": [
            [
                "7d867c3ead24190c"
            ]
        ]
    },
    {
        "id": "82e9d4324cdb2728",
        "type": "debug",
        "z": "bf22cd3c7ed55a35",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 380,
        "wires": []
    },
    {
        "id": "ee46f0cd97686a3b",
        "type": "inject",
        "z": "bf22cd3c7ed55a35",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 460,
        "wires": [
            [
                "5a0ec661e1909bfd"
            ]
        ]
    },
    {
        "id": "01da5252c1115b9a",
        "type": "debug",
        "z": "bf22cd3c7ed55a35",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 500,
        "wires": []
    },
    {
        "id": "f21bf607484f07da",
        "type": "subflow:0f802e687dcc9e4a",
        "z": "bf22cd3c7ed55a35",
        "name": "",
        "x": 280,
        "y": 380,
        "wires": [
            [
                "82e9d4324cdb2728"
            ]
        ]
    },
    {
        "id": "7d867c3ead24190c",
        "type": "function",
        "z": "bf22cd3c7ed55a35",
        "name": "prepare jwt payload",
        "func": "msg.sub = `MyPassword`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 340,
        "wires": [
            [
                "f21bf607484f07da"
            ]
        ]
    },
    {
        "id": "85bdb66ce6238ce7",
        "type": "subflow:c9c1579a9da27745",
        "z": "bf22cd3c7ed55a35",
        "name": "",
        "x": 310,
        "y": 500,
        "wires": [
            [
                "01da5252c1115b9a"
            ]
        ]
    },
    {
        "id": "5a0ec661e1909bfd",
        "type": "function",
        "z": "bf22cd3c7ed55a35",
        "name": "prepare jwt payload",
        "func": "msg.sub = {\n    password: 'MyPassword',\n    hash: '$2b$10$UsmqL2Pt3SwjJWXtAmT14OVEYUSiceuFL92gjQD/bEM.eWMWypqfi'\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 460,
        "wires": [
            [
                "85bdb66ce6238ce7"
            ]
        ]
    }
]